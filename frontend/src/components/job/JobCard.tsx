import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { MapPinIcon, ClockIcon, CurrencyDollarIcon } from '@heroicons/react/24/outline';\n\ninterface Job {\n  id: string;\n  title: string;\n  slug: string;\n  description: string;\n  location?: string;\n  remoteType: string;\n  employmentType: string;\n  experienceLevel?: string;\n  salaryMin?: number;\n  salaryMax?: number;\n  currency: string;\n  salaryType: string;\n  skillsRequired: string[];\n  isFeatured: boolean;\n  isUrgent: boolean;\n  createdAt: string;\n  applicationsCount?: number;\n  company: {\n    id: string;\n    name: string;\n    slug: string;\n    logoUrl?: string;\n    location?: string;\n    isVerified: boolean;\n  };\n  category?: {\n    id: string;\n    name: string;\n    slug: string;\n  };\n}\n\ninterface JobCardProps {\n  job: Job;\n}\n\nconst JobCard: React.FC<JobCardProps> = ({ job }) => {\n  const formatSalary = () => {\n    if (!job.salaryMin && !job.salaryMax) return null;\n    \n    const formatNumber = (num: number) => {\n      return new Intl.NumberFormat('en-US').format(num);\n    };\n    \n    const currency = job.currency || 'USD';\n    const period = job.salaryType === 'yearly' ? '/year' : \n                   job.salaryType === 'monthly' ? '/month' : \n                   job.salaryType === 'weekly' ? '/week' : '/hour';\n    \n    if (job.salaryMin && job.salaryMax) {\n      return `${currency} ${formatNumber(job.salaryMin)} - ${formatNumber(job.salaryMax)} ${period}`;\n    } else if (job.salaryMin) {\n      return `${currency} ${formatNumber(job.salaryMin)}+ ${period}`;\n    } else if (job.salaryMax) {\n      return `Up to ${currency} ${formatNumber(job.salaryMax)} ${period}`;\n    }\n    \n    return null;\n  };\n\n  const formatEmploymentType = (type: string) => {\n    return type.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n  };\n\n  const formatRemoteType = (type: string) => {\n    return type.charAt(0).toUpperCase() + type.slice(1);\n  };\n\n  const timeAgo = (dateString: string) => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffInHours = Math.floor((now.getTime() - date.getTime()) / (1000 * 60 * 60));\n    \n    if (diffInHours < 24) {\n      return diffInHours === 0 ? 'Just posted' : `${diffInHours}h ago`;\n    } else {\n      const diffInDays = Math.floor(diffInHours / 24);\n      return `${diffInDays}d ago`;\n    }\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border hover:shadow-md transition-shadow duration-200\">\n      <div className=\"p-6\">\n        {/* Header */}\n        <div className=\"flex items-start justify-between mb-4\">\n          <div className=\"flex items-center space-x-3\">\n            {job.company.logoUrl ? (\n              <img\n                src={job.company.logoUrl}\n                alt={`${job.company.name} logo`}\n                className=\"w-12 h-12 rounded-md object-cover\"\n              />\n            ) : (\n              <div className=\"w-12 h-12 rounded-md bg-gray-200 flex items-center justify-center\">\n                <span className=\"text-sm font-medium text-gray-600\">\n                  {job.company.name.charAt(0).toUpperCase()}\n                </span>\n              </div>\n            )}\n            <div>\n              <div className=\"flex items-center space-x-2\">\n                <h3 className=\"text-sm font-medium text-gray-900\">\n                  {job.company.name}\n                </h3>\n                {job.company.isVerified && (\n                  <svg className=\"w-4 h-4 text-blue-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                  </svg>\n                )}\n              </div>\n              <p className=\"text-xs text-gray-500\">{job.company.location}</p>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            {job.isFeatured && (\n              <span className=\"bg-yellow-100 text-yellow-800 text-xs font-medium px-2.5 py-0.5 rounded-full\">\n                Featured\n              </span>\n            )}\n            {job.isUrgent && (\n              <span className=\"bg-red-100 text-red-800 text-xs font-medium px-2.5 py-0.5 rounded-full\">\n                Urgent\n              </span>\n            )}\n          </div>\n        </div>\n\n        {/* Job Title and Description */}\n        <div className=\"mb-4\">\n          <Link\n            to={`/jobs/${job.id}`}\n            className=\"text-xl font-semibold text-gray-900 hover:text-blue-600 transition-colors\"\n          >\n            {job.title}\n          </Link>\n          <p className=\"text-gray-600 mt-2 line-clamp-2\">\n            {job.description}\n          </p>\n        </div>\n\n        {/* Job Details */}\n        <div className=\"flex flex-wrap items-center gap-4 text-sm text-gray-500 mb-4\">\n          {job.location && (\n            <div className=\"flex items-center space-x-1\">\n              <MapPinIcon className=\"w-4 h-4\" />\n              <span>{job.location}</span>\n            </div>\n          )}\n          \n          <div className=\"flex items-center space-x-1\">\n            <ClockIcon className=\"w-4 h-4\" />\n            <span>{formatEmploymentType(job.employmentType)}</span>\n          </div>\n          \n          {job.remoteType !== 'office' && (\n            <span className=\"bg-green-100 text-green-800 text-xs font-medium px-2 py-1 rounded\">\n              {formatRemoteType(job.remoteType)}\n            </span>\n          )}\n          \n          {job.experienceLevel && (\n            <span className=\"bg-blue-100 text-blue-800 text-xs font-medium px-2 py-1 rounded\">\n              {job.experienceLevel.charAt(0).toUpperCase() + job.experienceLevel.slice(1)} Level\n            </span>\n          )}\n        </div>\n\n        {/* Salary */}\n        {formatSalary() && (\n          <div className=\"flex items-center space-x-1 text-green-600 font-medium mb-4\">\n            <CurrencyDollarIcon className=\"w-4 h-4\" />\n            <span>{formatSalary()}</span>\n          </div>\n        )}\n\n        {/* Skills */}\n        {job.skillsRequired.length > 0 && (\n          <div className=\"mb-4\">\n            <div className=\"flex flex-wrap gap-1\">\n              {job.skillsRequired.slice(0, 5).map((skill, index) => (\n                <span\n                  key={index}\n                  className=\"bg-gray-100 text-gray-700 text-xs px-2 py-1 rounded\"\n                >\n                  {skill}\n                </span>\n              ))}\n              {job.skillsRequired.length > 5 && (\n                <span className=\"text-xs text-gray-500 px-2 py-1\">\n                  +{job.skillsRequired.length - 5} more\n                </span>\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Footer */}\n        <div className=\"flex items-center justify-between pt-4 border-t border-gray-100\">\n          <div className=\"flex items-center space-x-4 text-xs text-gray-500\">\n            <span>{timeAgo(job.createdAt)}</span>\n            {job.category && (\n              <span className=\"text-blue-600\">#{job.category.name}</span>\n            )}\n            {typeof job.applicationsCount === 'number' && (\n              <span>{job.applicationsCount} applicant{job.applicationsCount !== 1 ? 's' : ''}</span>\n            )}\n          </div>\n          \n          <Link\n            to={`/jobs/${job.id}`}\n            className=\"bg-blue-600 text-white px-4 py-2 text-sm rounded-md hover:bg-blue-700 transition-colors\"\n          >\n            View Details\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default JobCard;